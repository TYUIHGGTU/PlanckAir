#include <behaviors.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#include <behaviors/toggle_io.dtsi> // for toggle behavior
#include <behaviors/on_io.dtsi>    // for on behavior
#include <behaviors/off_io.dtsi>   // for off behavior

/ {
    keymap {
        compatible = "zmk,keymap";

        LETTER {
            bindings = <
&kp ESC          &kp Q  &kp W      &kp E         &kp R             &kp T      &kp Y  &kp U  &kp I      &kp O          &kp P     &kp BACKSPACE
&kp RIGHT_SHIFT  &kp A  &kp S      &kp D         &kp F             &kp G      &kp H  &kp J  &kp K      &kp L          &kp SEMI  &kp RETURN
&kp LEFT_SHIFT   &kp Z  &kp X      &kp C         &kp V             &kp B      &kp N  &kp M  &kp COMMA  &kp DOT        &kp FSLH  &kp BACKSLASH
                        &kp LC(C)  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp SPACE  &mo 2  &mo 1  &kp RCTRL  &none          &none     &none
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;

            label = "LETTER";
        };

        CHAR {
            bindings = <
&kp ESC    &kp EXCLAMATION  &kp AT_SIGN  &kp HASH         &kp DOLLAR             &kp PERCENT        &kp LCTRL  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE
&kp TAB    &kp N1           &kp N2       &kp N3           &kp N4                 &kp N5             &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &kp RET
&kp LSHFT  &kp MINUS        &kp EQUAL    &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp COLON  &kp APOS       &kp COMMA     &kp DOT               &kp FSLH               &kp BSLH
                            &trans       &trans           &trans                 &trans             &trans     &trans         &trans        &none                 &none                  &none
            >;

            label = "CHAR";
        };

        ARROW {
            label = "ARROW";
            bindings = <
&kp ESC    &kp EXCLAMATION  &kp AT_SIGN  &kp HASH        &kp DOLLAR            &kp PERCENT       &kp LCTRL  &kp PAGE_UP  &kp UP_ARROW  &kp PAGE_DOWN  &kp HOME  &kp GRAVE
&kp TAB    &kp N1           &kp N2       &kp N3          &kp N4                &kp N5            &kp N6     &kp LEFT     &kp DOWN      &kp RIGHT      &kp END   &kp RET
&kp LSHFT  &kp MINUS        &kp EQUAL    &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp COLON  &kp APOS     &kp COMMA     &kp DOT        &kp FSLH  &kp BSLH
                            &trans       &trans          &trans                &trans            &trans     &trans       &trans        &none          &none     &none
            >;
        };

        BLE {
            bindings = <
&bt BT_SEL 0  &bt BT_DISC 0  &bt BT_PRV      &kp C_VOL_UP       &kp C_BRIGHTNESS_INC                    &rgb_ug RGB_COLOR_HSB(296,100,68)  &rgb_ug RGB_EFR                 &rgb_ug RGB_SPI                   &rgb_ug RGB_BRI                    &rgb_ug RGB_SAI                    &rgb_ug RGB_HUI                    &rgb_ug RGB_TOG
&bt BT_SEL 1  &bt BT_DISC 1  &bt BT_NXT      &kp C_VOL_DN       &kp C_BRIGHTNESS_DEC                    &rgb_ug RGB_COLOR_HSB(360,100,51)  &rgb_ug RGB_EFR                 &rgb_ug RGB_SPD                   &rgb_ug RGB_BRD                    &rgb_ug RGB_SAD                    &rgb_ug RGB_HUD                    &rgb_ug RGB_ON
&bt BT_SEL 2  &bt BT_DISC 2  &bt BT_CLR      &kp K_MUTE         &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS  &trans                             &rgb_ug RGB_COLOR_HSB(0,0,100)  &rgb_ug RGB_COLOR_HSB(45,100,50)  &rgb_ug RGB_COLOR_HSB(114,100,51)  &rgb_ug RGB_COLOR_HSB(186,100,50)  &rgb_ug RGB_COLOR_HSB(261,100,50)  &rgb_ug RGB_OFF
                             &bt BT_CLR_ALL  &ext_power EP_OFF  &ext_power EP_ON                        &ext_power EP_TOG                  &trans                          &none                             &none                              &none
            >;

            label = "BLE";
        };
    };
};